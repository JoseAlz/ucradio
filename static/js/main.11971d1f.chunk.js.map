{"version":3,"sources":["assets/image/uc16.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","height","largeIcon","fontSize","App","classes","useState","play","volume","mute","radio","setRadio","handlePlay","className","src","uc","alt","IconButton","color","onClick","Grid","container","spacing","item","xs","Slider","value","onChange","event","newValue","step","min","max","url","playing","muted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXAAe,MAA0B,iC,OCanCA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,MACPC,OAAQ,OAEVC,UAAW,CACTC,SAAU,SA4ECC,MAxEf,WACE,IAAMC,EAAUR,IADH,EAKaS,mBAAS,CAAEC,MAAM,EAAOC,OAAQ,GAAKC,MAAM,IALxD,mBAKNC,EALM,KAKCC,EALD,KAOPC,EAAa,WACjBD,EAAS,2BAAKD,GAAN,IAAaH,MAAOG,EAAMH,SAWpC,OACE,sBAAKM,UAAU,YAAf,UACE,mDACA,uDACA,qBAAKA,UAAU,KAAKC,IAAKC,EAAIC,IAAI,sBAEjC,sBAAKH,UAAWR,EAAQN,KAAxB,UACGW,EAAMH,KACL,qCACE,cAACU,EAAA,EAAD,CAAYC,MAAM,YAAYC,QAASP,EAAvC,SACE,cAAC,IAAD,CAAUC,UAAWR,EAAQH,cAG/B,cAACe,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAjBnB,WACjBR,EAAS,2BAAKD,GAAN,IAAaD,MAAOC,EAAMD,SAgB1B,SACGC,EAAMD,KAAO,cAAC,IAAD,IAAoB,cAAC,IAAD,SAItC,cAACQ,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAASP,EAArC,SACE,cAAC,IAAD,CAAeC,UAAWR,EAAQH,cAItC,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,IAAD,MAEF,cAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CACEC,MAAOhB,EAAMF,OACbmB,SAtCS,SAACC,EAAOC,GAC3BlB,EAAS,2BAAKD,GAAN,IAAaF,OAAQqB,MAsCnBC,KAAM,GACNC,IAAK,EACLC,IAAK,MAGT,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,IAAD,SAIJ,cAAC,IAAD,CACEV,UAAU,eACVoB,IA3DI,uCA4DJC,QAASxB,EAAMH,KACfC,OAAQE,EAAMF,OACd2B,MAAOzB,EAAMD,cC5ER2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.11971d1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/uc16.9d13b153.svg\";","import \"./App.css\";\nimport { useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Slider, Grid } from \"@material-ui/core\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\n\nimport uc from \"./assets/image/uc16.svg\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"300\",\n    height: \"300\",\n  },\n  largeIcon: {\n    fontSize: \"3em\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  const url = \"https://stream.zeno.fm/nenvh2ut97zuv\";\n\n  const [radio, setRadio] = useState({ play: false, volume: 0.5, mute: false });\n\n  const handlePlay = () => {\n    setRadio({ ...radio, play: !radio.play });\n  };\n\n  const handleVolume = (event, newValue) => {\n    setRadio({ ...radio, volume: newValue });\n  };\n\n  const handleMute = () => {\n    setRadio({ ...radio, mute: !radio.mute });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Uculturemix Radio</h1>\n      <p>Buenos Aires Argentina</p>\n      <img className=\"uc\" src={uc} alt=\"uculturemix radio\" />\n\n      <div className={classes.root}>\n        {radio.play ? (\n          <>\n            <IconButton color=\"secondary\" onClick={handlePlay}>\n              <StopIcon className={classes.largeIcon} />\n            </IconButton>\n\n            <IconButton color=\"primary\" onClick={handleMute}>\n              {radio.mute ? <VolumeOffIcon /> : <VolumeUpIcon />}\n            </IconButton>\n          </>\n        ) : (\n          <IconButton color=\"primary\" onClick={handlePlay}>\n            <PlayArrowIcon className={classes.largeIcon} />\n          </IconButton>\n        )}\n\n        <Grid container spacing={2}>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider\n              value={radio.volume}\n              onChange={handleVolume}\n              step={0.1}\n              min={0}\n              max={1}\n            />\n          </Grid>\n          <Grid item>\n            <VolumeUpIcon />\n          </Grid>\n        </Grid>\n\n        <ReactPlayer\n          className=\"react-player\"\n          url={url}\n          playing={radio.play}\n          volume={radio.volume}\n          muted={radio.mute}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}